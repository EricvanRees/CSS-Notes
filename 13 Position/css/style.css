/* For CSS position, see https://developer.mozilla.org/en-US/docs/Web/CSS/position 

"Absolute positioning needs a relative parent. Without an ancestor element positioned relative, it takes the initial box, the browser window." 



*/

@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: "Roboto", sans-serif;
  font-size: 1.5rem;
  min-height: 200vh;
}

.outer-container {
  border: 3px dashed #000;
  width: 75vw;
  height: 85vh;
  margin: 40px auto;
  position: relative;
}

.inner-container {
  border: 2px solid #00f;
  width: 40vw;
  height: 50vh;
  margin: 200px auto;
}

.box {
  width: 150px;
  height: 150px;
  color: #fff;
  padding: 1rem;
}

.absolute {
  background-color: #00f; 
  /* this is the default position: 
  position: static; 

  "position: absolute" needs at least one value for top/bottom/left/right
  position: absolute;
  top: 0;
  left: 0;

  !!! Adding "position: relative" to inner or outer container moves the box inside one of these elements using "position: absolute" to the inner box. !!!

  */ 
  
  position: absolute;
  
  /* z-index of 1 will place the absolute block on top of the fixed block (if present) */ 

  z-index: 1;
  top: 0;
  left: 0;
}

/* "position: relative" - The element is positioned according to the normal flow of the document, and then offset relative to itself based on the values of top, right, bottom, and left. */

.relative {
  background-color: red;
  position: relative;
  top: 100px;
  left: 100px;
}

.fixed {
  /* "position: fixed" The element is positioned relative to its initial containing block, which is the viewport in the case of visual media. Its final position is determined by the values of top, right, bottom, and left.
  
  When scrolling down or up, the fixed block does not move. 
  
  */ 
  background-color: green;
  position: fixed;
  top: 0;
}

/* "position: sticky" is a little different than "position: fixed" as it stays in its normal flow until it reaches a defined spot" */ 

.sticky {
  background-color: black;
  position: sticky;
  top: 0;
}

/*///////////////////////////*/
/* for better scroll behavior */
html {scroll-behavior: smooth;}


section {
  height: 100vh;
}

.blue { background-color: #00f;}
.red { background-color: red;}
.green { background-color: green;}

header, footer {
  color: #fff;
  text-align: center;
  height: 100px;
}

header {
  font-size: 5rem;
  position: sticky;
  top: 0;
}

footer {
  background-color: black;
  /* position: fixed also works here so footer does not move when scrolling: */
  position: sticky;
  bottom: 0;
  font-size: 3rem;
}

a:visited {
  color: #fff;
}

.social {
  background-color: royalblue;
  color: #fff;
  padding: 1rem;
  position: fixed;
  top: 30%;
  left: 0;
  border: 1px solid black;
  z-index: 1;
}